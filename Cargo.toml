[workspace]
members = [
  "adana-cache-command",
  "adana-db",
  "adana-script",
  "adana-script-core",
  "adana-script-wasm",
  "adana-shell",
]
resolver = "2"

[workspace.package]
version = "0.18.3"
authors = ["Nordine Bittich"]
description = "namespaces aliases for command lines & basic scripting language"
homepage = "https://github.com/nbittich/adana"
repository = "https://github.com/nbittich/adana"
readme = "README.md"
rust-version = "1.82"
edition = "2021"
license = "MIT"
exclude = ["vscode/", "dist/", ".vscode", ".history", ".git", ".github"]

[workspace.dependencies]

anyhow = "1.0.94"
bincode = "1.3.3"
dirs = "5.0.1"                                                               # todo maybe replace by the home crate
log = "0.4.22"
nom = "7.1.3"
libloading = "0.8.6"
nu-ansi-term = "0.50.1"
rustyline = "15.0.0"
rustyline-derive = "0.11.0"
serde = { version = "1.0.215", features = ['serde_derive', 'rc'] }
serde_json = "1.0.133"
slab_tree = "0.3.2"
strum = { version = "0.26.3", features = ["derive"] }
ctrlc = "3.4.5"
env_logger = { version = "0.11.5", default-features = false }
arboard = "3.4.1"
regex = { version = "1.11.1", default-features = false, features = ["std"] }
serial_test = "3.2.0"

# wasm
wasm-bindgen = { version = "0.2.99" }
console_error_panic_hook = { version = "0.1.7" }
serde-wasm-bindgen = "0.6.5"
wee_alloc = "0.4.5"
wasm-bindgen-test = "0.3.47"
web-sys = "0.3.74"
js-sys = "0.3.74"

# workspace specific libs
adana-script-core = { version = "0.18.3", path = "./adana-script-core" }
adana-script = { version = "0.18.3", path = "./adana-script" }
adana-db = { version = "0.18.3", path = "./adana-db" }
adana-cache-command = { version = "0.18.3", path = "./adana-cache-command" }

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.11.1"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu"] # "aarch64-unknown-linux-gnu",
# Publish jobs to run in CI
pr-run-mode = "plan"

# [workspace.metadata.dist.github-custom-runners]
# I don't know how that works -- aarch64-unknown-linux-gnu = "pguyot/arm-runner-action@v2"


[profile.release]
opt-level = 's'
lto = true      # Link Time Optimization (LTO)

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
